#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShadespireDB.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShadespireDB")]
	public partial class ShadespireDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertattack_type(attack_type instance);
    partial void Updateattack_type(attack_type instance);
    partial void Deleteattack_type(attack_type instance);
    partial void Insertweapon_ability(weapon_ability instance);
    partial void Updateweapon_ability(weapon_ability instance);
    partial void Deleteweapon_ability(weapon_ability instance);
    partial void Insertcard_race(card_race instance);
    partial void Updatecard_race(card_race instance);
    partial void Deletecard_race(card_race instance);
    partial void Insertcard_set(card_set instance);
    partial void Updatecard_set(card_set instance);
    partial void Deletecard_set(card_set instance);
    partial void Insertcard_type(card_type instance);
    partial void Updatecard_type(card_type instance);
    partial void Deletecard_type(card_type instance);
    partial void Insertcard(card instance);
    partial void Updatecard(card instance);
    partial void Deletecard(card instance);
    partial void Insertdefence_type(defence_type instance);
    partial void Updatedefence_type(defence_type instance);
    partial void Deletedefence_type(defence_type instance);
    #endregion
		
		public ShadespireDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShadespireDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShadespireDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShadespireDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShadespireDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShadespireDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<attack_type> attack_types
		{
			get
			{
				return this.GetTable<attack_type>();
			}
		}
		
		public System.Data.Linq.Table<weapon_ability> weapon_abilities
		{
			get
			{
				return this.GetTable<weapon_ability>();
			}
		}
		
		public System.Data.Linq.Table<card_flower_text> card_flower_texts
		{
			get
			{
				return this.GetTable<card_flower_text>();
			}
		}
		
		public System.Data.Linq.Table<card_number> card_numbers
		{
			get
			{
				return this.GetTable<card_number>();
			}
		}
		
		public System.Data.Linq.Table<card_race> card_races
		{
			get
			{
				return this.GetTable<card_race>();
			}
		}
		
		public System.Data.Linq.Table<card_set> card_sets
		{
			get
			{
				return this.GetTable<card_set>();
			}
		}
		
		public System.Data.Linq.Table<card_text> card_texts
		{
			get
			{
				return this.GetTable<card_text>();
			}
		}
		
		public System.Data.Linq.Table<card_type> card_types
		{
			get
			{
				return this.GetTable<card_type>();
			}
		}
		
		public System.Data.Linq.Table<card_weapon> card_weapons
		{
			get
			{
				return this.GetTable<card_weapon>();
			}
		}
		
		public System.Data.Linq.Table<card> cards
		{
			get
			{
				return this.GetTable<card>();
			}
		}
		
		public System.Data.Linq.Table<defence_type> defence_types
		{
			get
			{
				return this.GetTable<defence_type>();
			}
		}
		
		public System.Data.Linq.Table<enchantment_target> enchantment_targets
		{
			get
			{
				return this.GetTable<enchantment_target>();
			}
		}
		
		public System.Data.Linq.Table<mission_info> mission_infos
		{
			get
			{
				return this.GetTable<mission_info>();
			}
		}
		
		public System.Data.Linq.Table<trooper_info> trooper_infos
		{
			get
			{
				return this.GetTable<trooper_info>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.attack_types")]
	public partial class attack_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public attack_type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.weapon_abilities")]
	public partial class weapon_ability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public weapon_ability()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.card_flower_texts")]
	public partial class card_flower_text
	{
		
		private int _card_id;
		
		private string _flower_text;
		
		public card_flower_text()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_id", DbType="Int NOT NULL")]
		public int card_id
		{
			get
			{
				return this._card_id;
			}
			set
			{
				if ((this._card_id != value))
				{
					this._card_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flower_text", DbType="VarChar(200)")]
		public string flower_text
		{
			get
			{
				return this._flower_text;
			}
			set
			{
				if ((this._flower_text != value))
				{
					this._flower_text = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.card_numbers")]
	public partial class card_number
	{
		
		private int _card_id;
		
		private System.Nullable<int> _card_number1;
		
		public card_number()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_id", DbType="Int NOT NULL")]
		public int card_id
		{
			get
			{
				return this._card_id;
			}
			set
			{
				if ((this._card_id != value))
				{
					this._card_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="card_number", Storage="_card_number1", DbType="Int")]
		public System.Nullable<int> card_number1
		{
			get
			{
				return this._card_number1;
			}
			set
			{
				if ((this._card_number1 != value))
				{
					this._card_number1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.card_races")]
	public partial class card_race : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<card> _cards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public card_race()
		{
			this._cards = new EntitySet<card>(new Action<card>(this.attach_cards), new Action<card>(this.detach_cards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="card_race_card", Storage="_cards", ThisKey="id", OtherKey="race")]
		public EntitySet<card> cards
		{
			get
			{
				return this._cards;
			}
			set
			{
				this._cards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cards(card entity)
		{
			this.SendPropertyChanging();
			entity.card_race = this;
		}
		
		private void detach_cards(card entity)
		{
			this.SendPropertyChanging();
			entity.card_race = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.card_sets")]
	public partial class card_set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<card> _cards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public card_set()
		{
			this._cards = new EntitySet<card>(new Action<card>(this.attach_cards), new Action<card>(this.detach_cards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="card_set_card", Storage="_cards", ThisKey="id", OtherKey="set")]
		public EntitySet<card> cards
		{
			get
			{
				return this._cards;
			}
			set
			{
				this._cards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cards(card entity)
		{
			this.SendPropertyChanging();
			entity.card_set = this;
		}
		
		private void detach_cards(card entity)
		{
			this.SendPropertyChanging();
			entity.card_set = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.card_texts")]
	public partial class card_text
	{
		
		private int _card_id;
		
		private string _text;
		
		public card_text()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_id", DbType="Int NOT NULL")]
		public int card_id
		{
			get
			{
				return this._card_id;
			}
			set
			{
				if ((this._card_id != value))
				{
					this._card_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="VarChar(200)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this._text = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.card_types")]
	public partial class card_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<card> _cards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public card_type()
		{
			this._cards = new EntitySet<card>(new Action<card>(this.attach_cards), new Action<card>(this.detach_cards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="card_type_card", Storage="_cards", ThisKey="id", OtherKey="type")]
		public EntitySet<card> cards
		{
			get
			{
				return this._cards;
			}
			set
			{
				this._cards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cards(card entity)
		{
			this.SendPropertyChanging();
			entity.card_type = this;
		}
		
		private void detach_cards(card entity)
		{
			this.SendPropertyChanging();
			entity.card_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.card_weapons")]
	public partial class card_weapon
	{
		
		private int _card_id;
		
		private System.Nullable<int> _range;
		
		private System.Nullable<int> _weapon_type;
		
		private System.Nullable<int> _attack_die_count;
		
		private System.Nullable<int> _damage;
		
		private System.Nullable<int> _ability;
		
		public card_weapon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_id", DbType="Int NOT NULL")]
		public int card_id
		{
			get
			{
				return this._card_id;
			}
			set
			{
				if ((this._card_id != value))
				{
					this._card_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_range", DbType="Int")]
		public System.Nullable<int> range
		{
			get
			{
				return this._range;
			}
			set
			{
				if ((this._range != value))
				{
					this._range = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weapon_type", DbType="Int")]
		public System.Nullable<int> weapon_type
		{
			get
			{
				return this._weapon_type;
			}
			set
			{
				if ((this._weapon_type != value))
				{
					this._weapon_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attack_die_count", DbType="Int")]
		public System.Nullable<int> attack_die_count
		{
			get
			{
				return this._attack_die_count;
			}
			set
			{
				if ((this._attack_die_count != value))
				{
					this._attack_die_count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_damage", DbType="Int")]
		public System.Nullable<int> damage
		{
			get
			{
				return this._damage;
			}
			set
			{
				if ((this._damage != value))
				{
					this._damage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ability", DbType="Int")]
		public System.Nullable<int> ability
		{
			get
			{
				return this._ability;
			}
			set
			{
				if ((this._ability != value))
				{
					this._ability = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cards")]
	public partial class card : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _type;
		
		private string _name;
		
		private int _set;
		
		private int _race;
		
		private EntityRef<card_set> _card_set;
		
		private EntityRef<card_type> _card_type;
		
		private EntityRef<card_race> _card_race;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsetChanging(int value);
    partial void OnsetChanged();
    partial void OnraceChanging(int value);
    partial void OnraceChanged();
    #endregion
		
		public card()
		{
			this._card_set = default(EntityRef<card_set>);
			this._card_type = default(EntityRef<card_type>);
			this._card_race = default(EntityRef<card_race>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					if (this._card_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[set]", Storage="_set", DbType="Int NOT NULL")]
		public int set
		{
			get
			{
				return this._set;
			}
			set
			{
				if ((this._set != value))
				{
					this.OnsetChanging(value);
					this.SendPropertyChanging();
					this._set = value;
					this.SendPropertyChanged("set");
					this.OnsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_race", DbType="Int NOT NULL")]
		public int race
		{
			get
			{
				return this._race;
			}
			set
			{
				if ((this._race != value))
				{
					if (this._card_race.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnraceChanging(value);
					this.SendPropertyChanging();
					this._race = value;
					this.SendPropertyChanged("race");
					this.OnraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="card_set_card", Storage="_card_set", ThisKey="set", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public card_set card_set
		{
			get
			{
				return this._card_set.Entity;
			}
			set
			{
				card_set previousValue = this._card_set.Entity;
				if (((previousValue != value) 
							|| (this._card_set.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._card_set.Entity = null;
						previousValue.cards.Remove(this);
					}
					this._card_set.Entity = value;
					if ((value != null))
					{
						value.cards.Add(this);
						this._set = value.id;
					}
					else
					{
						this._set = default(int);
					}
					this.SendPropertyChanged("card_set");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="card_type_card", Storage="_card_type", ThisKey="type", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public card_type card_type
		{
			get
			{
				return this._card_type.Entity;
			}
			set
			{
				card_type previousValue = this._card_type.Entity;
				if (((previousValue != value) 
							|| (this._card_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._card_type.Entity = null;
						previousValue.cards.Remove(this);
					}
					this._card_type.Entity = value;
					if ((value != null))
					{
						value.cards.Add(this);
						this._type = value.id;
					}
					else
					{
						this._type = default(int);
					}
					this.SendPropertyChanged("card_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="card_race_card", Storage="_card_race", ThisKey="race", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public card_race card_race
		{
			get
			{
				return this._card_race.Entity;
			}
			set
			{
				card_race previousValue = this._card_race.Entity;
				if (((previousValue != value) 
							|| (this._card_race.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._card_race.Entity = null;
						previousValue.cards.Remove(this);
					}
					this._card_race.Entity = value;
					if ((value != null))
					{
						value.cards.Add(this);
						this._race = value.id;
					}
					else
					{
						this._race = default(int);
					}
					this.SendPropertyChanged("card_race");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.defence_types")]
	public partial class defence_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public defence_type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.enchantment_targets")]
	public partial class enchantment_target
	{
		
		private int _card_id;
		
		private System.Nullable<int> _target_id;
		
		public enchantment_target()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_id", DbType="Int NOT NULL")]
		public int card_id
		{
			get
			{
				return this._card_id;
			}
			set
			{
				if ((this._card_id != value))
				{
					this._card_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_target_id", DbType="Int")]
		public System.Nullable<int> target_id
		{
			get
			{
				return this._target_id;
			}
			set
			{
				if ((this._target_id != value))
				{
					this._target_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.mission_infos")]
	public partial class mission_info
	{
		
		private int _card__id;
		
		private System.Nullable<int> _glory_points;
		
		public mission_info()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[card_id]", Storage="_card__id", DbType="Int NOT NULL")]
		public int card__id
		{
			get
			{
				return this._card__id;
			}
			set
			{
				if ((this._card__id != value))
				{
					this._card__id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_glory_points", DbType="Int")]
		public System.Nullable<int> glory_points
		{
			get
			{
				return this._glory_points;
			}
			set
			{
				if ((this._glory_points != value))
				{
					this._glory_points = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trooper_infos")]
	public partial class trooper_info
	{
		
		private int _card_id;
		
		private System.Nullable<int> _move;
		
		private System.Nullable<int> _defence_type;
		
		private System.Nullable<int> _defence_die_count;
		
		private string _flip_trigger;
		
		private System.Nullable<int> _flipped_card_id;
		
		public trooper_info()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_id", DbType="Int NOT NULL")]
		public int card_id
		{
			get
			{
				return this._card_id;
			}
			set
			{
				if ((this._card_id != value))
				{
					this._card_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_move", DbType="Int")]
		public System.Nullable<int> move
		{
			get
			{
				return this._move;
			}
			set
			{
				if ((this._move != value))
				{
					this._move = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defence_type", DbType="Int")]
		public System.Nullable<int> defence_type
		{
			get
			{
				return this._defence_type;
			}
			set
			{
				if ((this._defence_type != value))
				{
					this._defence_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defence_die_count", DbType="Int")]
		public System.Nullable<int> defence_die_count
		{
			get
			{
				return this._defence_die_count;
			}
			set
			{
				if ((this._defence_die_count != value))
				{
					this._defence_die_count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flip_trigger", DbType="VarChar(100)")]
		public string flip_trigger
		{
			get
			{
				return this._flip_trigger;
			}
			set
			{
				if ((this._flip_trigger != value))
				{
					this._flip_trigger = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flipped_card_id", DbType="Int")]
		public System.Nullable<int> flipped_card_id
		{
			get
			{
				return this._flipped_card_id;
			}
			set
			{
				if ((this._flipped_card_id != value))
				{
					this._flipped_card_id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
